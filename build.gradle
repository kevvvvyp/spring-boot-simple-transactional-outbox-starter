plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

apply plugin: 'jacoco'

group = 'io.github.kevvvvyp'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}


bootJar {
    enabled = false
}

jar {
    enabled = true
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation "org.awaitility:awaitility"
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation "org.assertj:assertj-core"

    testImplementation "org.testcontainers:mysql"
    testRuntimeOnly 'com.mysql:mysql-connector-j'

    testImplementation "org.testcontainers:postgresql"
    testRuntimeOnly 'org.postgresql:postgresql'

    testImplementation('com.github.javafaker:javafaker:1.0.2') {
        exclude group: 'org.yaml', module: 'snakeyaml'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

task copyDatabaseInitScripts(type: Copy) {
    from "db_scripts/"
    into 'src/test/resources/'
    include('**/*.sql')
}

processTestResources.dependsOn(copyDatabaseInitScripts)
